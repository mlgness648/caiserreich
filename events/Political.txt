###########################
# Political Events
###########################
# By Kallar, Nijato, Sir Rogers, Zankoas and ~mw~
###########################

add_namespace = kr.political

####################################
### AI Event Fired At Game Start ###
####################################

country_event = {
	id = kr.political.10

	hidden = yes
	is_triggered_only = yes
	fire_only_once = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.10"

		### Setup Ambition Areas for Peace Conferences ###

		create_ambition_areas = yes

		### Kill Cores that are Auto Added ###

		OTT = {
			remove_state_core = 754
			remove_state_core = 679
		}
		MAF = {
			remove_state_core = 274
			remove_state_core = 558
			remove_state_core = 878
			remove_state_core = 913
			remove_state_core = 548
			remove_state_core = 969
			remove_state_core = 547
			remove_state_core = 925
			remove_state_core = 892
			remove_state_core = 871
			remove_state_core = 955
			remove_state_core = 956
			remove_state_core = 813
			remove_state_core = 958
			remove_state_core = 957
			remove_state_core = 970
		}
		NIC = {
			remove_state_core = 1071
		}
		SPR = {
			remove_state_core = 297
		}
		BHC = {
			remove_state_core = 858
		}
		GER = {
			remove_state_core = 543
			remove_state_core = 422
		}
		SAF = {
			remove_state_core = 542
			remove_state_core = 545
		}
		ETH = {
			remove_state_core = 550
			remove_state_core = 961
		}
		JAP = {
			remove_state_core = 525
			remove_state_core = 527
		}
		POR = {
			remove_state_core = 296
			remove_state_core = 540
			remove_state_core = 544
			remove_state_core = 914
			remove_state_core = 916
			remove_state_core = 917
			remove_state_core = 950
			remove_state_core = 951
			remove_state_core = 954
			remove_state_core = 959
		}
		BUR = {
			remove_state_core = 72
		}
		SIA = {
			remove_state_core = 750
			remove_state_core = 756
		}
	}
}

########################################
### Force Minister Setup for Puppets ###
########################################

country_event = {
	id = kr.political.12

	hidden = yes
	is_triggered_only = yes

	trigger = {
		is_puppet = yes # Not is_subject since that usually entails unintended tags
		is_ai = yes
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.12"
		remove_all_ministers = yes
		set_puppet_minister = yes
	}

}

###########################
### Introduction Events ###
###########################

country_event = { #Intro Event
	id = kr.political.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.1" }
	title = kr.political.1.t
	desc = kr.political.1.d
	picture = GFX_Viktor_Adler
	#picture = INTRO_main

	is_triggered_only = yes

	option = {
		name = kr.political.1.a
		#country_event = kr.political.26
	}

	#option = {
	#	name = kr.political.24.c #Q&A
	#	trigger = {
	#		has_global_flag = is_not_mp
	#	}
	#	add_political_power = 10
	#	ROOT = {
	#		country_event = kr.political.25
	#	}
	#}
}

#country_event = { #FAQ
#	id = kr.political.25
#	title = kr.political.25.t
#	desc = kr.political.25.d
#
#	is_triggered_only = yes
#
#	option = {
#		name = kr.political.25.a
#		add_political_power = -10
#		country_event = kr.political.26
#	}
#}
#
#country_event = { #Game Rules Notice
#	id = kr.political.26
#	title = kr.political.26.t
#	desc = kr.political.26.d
#	picture = GFX_Viktor_Adler
#
#	is_triggered_only = yes
#
#	option = {
#		name = kr.political.26.a
#	}
#}
#
#country_event = { #Extra message
#	id = kr.political.27
#	title = kr.political.27.t
#	desc = kr.political.27.d
#	picture = GFX_Viktor_Adler
#	#picture = INTRO_xmas
#
#	is_triggered_only = yes
#
#	option = {
#		name = kr.political.27.a
#	}
#}
#
#country_event = {
#	id = kr.political.28
#	title = kr.political.28.t
#	desc = kr.political.28.d
#
#	is_triggered_only = yes
#
#	option = {
#		name = kr.political.28.a
#		country_event = kr.political.26
#	}
#}

#################################################
### Setting up Opinion Modifiers at Gamestart ###
#################################################

country_event = {
	id = kr.political.40

	hidden = yes

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.40"
		if = {
			limit = {
				has_socialist_government = yes
			}
			every_country = {
				limit = {
					has_socialist_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_democratic_government = yes
						has_dictatorship_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		if = {
			limit = {
				has_democratic_government = yes
			}
			every_country = {
				limit = {
					has_democratic_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_socialist_government = yes
						has_dictatorship_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		if = {
			limit = {
				has_dictatorship_government = yes
			}
			every_country = {
				limit = {
					has_dictatorship_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_democratic_government = yes
						has_socialist_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		every_country = {
			limit = {
				has_same_government_as_ROOT = yes
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_same_ideology
			}
		}
		if = {
			limit = {
				has_government = totalist
			}
			set_country_flag = opinion_set_totalist
		}
		if = {
			limit = {
				has_government = syndicalist
			}
			set_country_flag = opinion_set_syndicalist
		}
		if = {
			limit = {
				has_government = radical_socialist
			}
			set_country_flag = opinion_set_radical_socialist
		}
		if = {
			limit = {
				has_government = social_democrat
			}
			set_country_flag = opinion_set_social_democrat
		}
		if = {
			limit = {
				has_government = social_liberal
			}
			set_country_flag = opinion_set_social_liberal
		}
		if = {
			limit = {
				has_government = market_liberal
			}
			set_country_flag = opinion_set_market_liberal
		}
		if = {
			limit = {
				has_government = social_conservative
			}
			set_country_flag = opinion_set_social_conservative
		}
		if = {
			limit = {
				has_government = authoritarian_democrat
			}
			set_country_flag = opinion_set_authoritarian_democrat
		}
		if = {
			limit = {
				has_government = paternal_autocrat
			}
			set_country_flag = opinion_set_paternal_autocrat
		}
		if = {
			limit = {
				has_government = national_populist
			}
			set_country_flag = opinion_set_national_populist
		}
	}

}

#########################################################
### Setting up Opinion Modifiers on Government Change ###
#########################################################

country_event = {
	id = kr.political.41

	hidden = yes

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.41"
		every_country = {
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_similar_ideology
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_similar_ideology
				}
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_different_ideology
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_different_ideology
				}
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_same_ideology
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_same_ideology
				}
			}
		}
		if = {
			limit = {
				has_socialist_government = yes
			}
			every_country = {
				limit = {
					has_socialist_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_democratic_government = yes
						has_dictatorship_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		if = {
			limit = {
				has_democratic_government = yes
			}
			every_country = {
				limit = {
					has_democratic_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_socialist_government = yes
						has_dictatorship_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		if = {
			limit = {
				has_dictatorship_government = yes
			}
			every_country = {
				limit = {
					has_dictatorship_government = yes
					NOT = {
						has_same_government_as_ROOT = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_similar_ideology
				}
			}
			every_country = {
				limit = {
					OR = {
						has_democratic_government = yes
						has_socialist_government = yes
					}
				}
				add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
				reverse_add_opinion_modifier = {
					target = ROOT
					modifier = KR_different_ideology
				}
			}
		}
		every_country = {
			limit = {
				has_same_government_as_ROOT = yes
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_same_ideology
			}
			reverse_add_opinion_modifier = {
				target = ROOT
				modifier = KR_same_ideology
			}
		}
	}

}

######################################
### Setting up Factional Rivalries ###
######################################

country_event = {
	id = kr.political.50

	hidden = yes

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.50"
		every_country = {
			limit = {
				is_in_faction_with = CAN
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
		}
		every_country = {
			limit = {
				is_in_faction_with = FRA
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
		}
		set_country_flag = GER_faction
	}
}

country_event = {
	id = kr.political.51

	hidden = yes

	trigger = {
		has_country_flag = GER_faction
		NOT = {
			is_in_faction_with = GER
		}
		NOT = {
			is_subject_of = GER
		}
	}

	mean_time_to_happen = {
		days = 2
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.51"
		every_country = {
			limit = {
				is_in_faction_with = CAN
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_factional_rivalry
				}
			}
		}
		every_country = {
			limit = {
				is_in_faction_with = FRA
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_factional_rivalry
				}
			}
		}
		clr_country_flag = GER_faction
	}
}

country_event = {
	id = kr.political.52

	hidden = yes

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.52"
		every_country = {
			limit = {
				OR = {
					is_in_faction_with = GER
					is_subject_of = GER
				}
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
		}
		every_country = {
			limit = {
				is_in_faction_with = FRA
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
		}
		set_country_flag = CAN_faction
	}
}

country_event = {
	id = kr.political.53

	hidden = yes

	trigger = {
		has_country_flag = CAN_faction
		NOT = {
			is_in_faction_with = CAN
		}
	}

	mean_time_to_happen = {
		days = 2
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.53"
		every_country = {
			limit = {
				OR = {
					is_in_faction_with = GER
					is_subject_of = GER
				}
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_factional_rivalry
				}
			}
		}
		every_country = {
			limit = {
				is_in_faction_with = FRA
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_factional_rivalry
				}
			}
		}
		clr_country_flag = CAN_faction
	}
}

country_event = {
	id = kr.political.54

	hidden = yes

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.54"
		every_country = {
			limit = {
				is_in_faction_with = CAN
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
		}
		every_country = {
			limit = {
				OR = {
					is_in_faction_with = GER
					is_subject_of = GER
				}
			}
			add_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
		}
		set_country_flag = FRA_faction
	}
}

country_event = {
	id = kr.political.55

	hidden = yes

	trigger = {
		has_country_flag = FRA_faction
		NOT = {
			is_in_faction_with = FRA
		}
	}

	mean_time_to_happen = {
		days = 2
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.55"
		every_country = {
			limit = {
				is_in_faction_with = CAN
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_factional_rivalry
				}
			}
		}
		every_country = {
			limit = {
				OR = {
					is_in_faction_with = GER
					is_subject_of = GER
				}
			}
			remove_opinion_modifier = {
				target = ROOT
				modifier = KR_factional_rivalry
			}
			ROOT = {
				remove_opinion_modifier = {
					target = PREV
					modifier = KR_factional_rivalry
				}
			}
		}
		clr_country_flag = FRA_faction
	}
}

##################################
### Removing Improvement Flags ###
##################################

country_event = {
	id = kr.political.73

	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = KR_improving_stability
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.73"
		clr_country_flag = KR_improving_stability
	}
}

country_event = {
	id = kr.political.74

	hidden = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = KR_improving_popularity
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.74"
		clr_country_flag = KR_improving_popularity
	}
}

#################################
### Returning Cores to Allies ###
#################################

# Which cores to return?
country_event = {
	id = kr.political.75
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.75" }
	title = kr.political.75.t
	desc = kr.political.75.d
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	option = {
		name = kr.political.75.a #return all land
		ai_chance = {
			factor = 1
		}
		clr_country_flag = KR_returning_land
		custom_effect_tooltip = KR_will_return_all
		hidden_effect = {
			event_target:return_to = {
				country_event = kr.political.76
			}
		}
	}
	option = {
		name = kr.political.75.b #return all land but vital provinces
		trigger = {
			any_owned_state = {
				is_controlled_by = ROOT
				is_claim_or_core_of_ROOT = no
				is_important_state = yes
				NOT = { has_state_flag = KR_keeping_state@ROOT }
				if = {
					limit = {
						ROOT = { tag = JAP }
						is_china_claim_of_JAP = yes
					}
					NOT = { has_variable = ambition_area_@ROOT }
				}
				OR = {
					NOT = { has_variable = ambition_area_@ROOT }
					AND = {
						ROOT = { tag = CAN }
						is_british_colonial_claim = yes
					}
					AND = {
						ROOT = { tag = ENG }
						is_british_colonial_claim = yes
					}
					AND = {
						ROOT = { tag = GBR }
						is_british_colonial_claim = yes
					}
					AND = {
						ROOT = { tag = FRA }
						is_french_colonial_claim = yes
					}
					AND = {
						ROOT = { tag = JAP }
						event_target:return_to = { tag = TRM }
						OR = {
							state = 408 #Vladivostok
							state = 409 #Khabarovsk
							state = 560 #Nikolayevsk
							state = 562 #Okhotsk
							state = 637 #Kamchatka
						}
					}
					AND = {
						ROOT = { tag = JAP }
						OR = {
							region = 194 #Malay Peninsula
							region = 91 #Arafura Sea
							region = 93 #Java Sea
							region = 158 #Sunda Islands
							region = 159 #Borneo
							region = 167 #New Guinea
							region = 192 #Sumatra
						}
					}
					AND = {
						ROOT = { tag = NFA }
						is_french_colonial_claim = yes
					}
					ROOT = { is_ai = no }
				}
				OR = {
					is_core_of = event_target:return_to
					is_claimed_by = event_target:return_to
				}
			}
		}
		ai_chance = {
			factor = 100
		}
		custom_effect_tooltip = KR_will_return_rest
		hidden_effect = {
			clr_country_flag = KR_returning_land
			every_owned_state = {
				limit = {
					is_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
					is_important_state = yes
					NOT = { has_state_flag = KR_keeping_state@ROOT }
					if = {
						limit = {
							ROOT = { tag = JAP }
							is_china_claim_of_JAP = yes
						}
						NOT = { has_variable = ambition_area_@ROOT }
					}
					OR = {
						NOT = { has_variable = ambition_area_@ROOT }
						AND = {
							ROOT = { tag = CAN }
							is_british_colonial_claim = yes
						}
						AND = {
							ROOT = { tag = ENG }
							is_british_colonial_claim = yes
						}
						AND = {
							ROOT = { tag = GBR }
							is_british_colonial_claim = yes
						}
						AND = {
							ROOT = { tag = FRA }
							is_french_colonial_claim = yes
						}
						AND = {
							ROOT = { tag = JAP }
							event_target:return_to = { tag = TRM }
							OR = {
								state = 408 #Vladivostok
								state = 409 #Khabarovsk
								state = 560 #Nikolayevsk
								state = 562 #Okhotsk
								state = 637 #Kamchatka
							}
						}
						AND = {
							ROOT = { tag = JAP }
							OR = {
								region = 194 #Malay Peninsula
								region = 91 #Arafura Sea
								region = 93 #Java Sea
								region = 158 #Sunda Islands
								region = 159 #Borneo
								region = 167 #New Guinea
								region = 192 #Sumatra
							}
						}
						AND = {
							ROOT = { tag = NFA }
							is_french_colonial_claim = yes
						}
						ROOT = { is_ai = no }
					}
					OR = {
						is_core_of = event_target:return_to
						is_claimed_by = event_target:return_to
					}
				}
				set_state_flag = KR_keeping_state@ROOT
			}
			if = {
				limit = {
					any_owned_state = {
						is_controlled_by = ROOT
						is_claim_or_core_of_ROOT = no
						is_important_state = no
						NOT = { has_state_flag = KR_keeping_state@ROOT }
						if = {
							limit = {
								ROOT = { tag = JAP }
								is_china_claim_of_JAP = yes
							}
							NOT = { has_variable = ambition_area_@ROOT }
						}
						OR = {
							NOT = { has_variable = ambition_area_@ROOT }
							AND = {
								ROOT = { tag = CAN }
								is_british_colonial_claim = yes
							}
							AND = {
								ROOT = { tag = ENG }
								is_british_colonial_claim = yes
							}
							AND = {
								ROOT = { tag = GBR }
								is_british_colonial_claim = yes
							}
							AND = {
								ROOT = { tag = FRA }
								is_french_colonial_claim = yes
							}
							AND = {
								ROOT = { tag = JAP }
								event_target:return_to = { tag = TRM }
								OR = {
									state = 408 #Vladivostok
									state = 409 #Khabarovsk
									state = 560 #Nikolayevsk
									state = 562 #Okhotsk
									state = 637 #Kamchatka
								}
							}
							AND = {
								ROOT = { tag = JAP }
								OR = {
									region = 194 #Malay Peninsula
									region = 91 #Arafura Sea
									region = 93 #Java Sea
									region = 158 #Sunda Islands
									region = 159 #Borneo
									region = 167 #New Guinea
									region = 192 #Sumatra
								}
							}
							AND = {
								ROOT = { tag = NFA }
								is_french_colonial_claim = yes
							}
							ROOT = { is_ai = no }
						}
						OR = {
							is_core_of = event_target:return_to
							is_claimed_by = event_target:return_to
						}
					}
				}
				event_target:return_to = {
					country_event = kr.political.76
				}
			}
		}
	}
	option = {
		name = kr.political.75.c #return cores only
		trigger = {
			is_ai = no
			any_owned_state = {
				is_controlled_by = ROOT
				is_claim_or_core_of_ROOT = no
				is_important_state = no
				NOT = { has_state_flag = KR_keeping_state@ROOT 	}
				is_core_of = event_target:return_to
			}
			any_owned_state = {
				is_controlled_by = ROOT
				is_claim_or_core_of_ROOT = no
				is_important_state = no
				NOT = { has_state_flag = KR_keeping_state@ROOT 	}
				NOT = { is_core_of = event_target:return_to }
				is_claimed_by = event_target:return_to
			}
		}
		custom_effect_tooltip = KR_will_return_cores
		hidden_effect = {
			clr_country_flag = KR_returning_land
			every_owned_state = {
				limit = {
					is_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
					NOT = { has_state_flag = KR_keeping_state@ROOT }
					NOT = { is_core_of = event_target:return_to }
					is_claimed_by = event_target:return_to
				}
				set_state_flag = KR_keeping_state@ROOT
			}
			event_target:return_to = {
				country_event = kr.political.76
			}
		}
	}
	option = {
		name = kr.political.75.e #keep it all you pig
		trigger = {
			is_ai = no
		}
		clr_country_flag = KR_returning_land
		custom_effect_tooltip = KR_will_not_return
		hidden_effect = {
			every_owned_state = {
				limit = {
					is_controlled_by = ROOT
					OR = {
						is_core_of = event_target:return_to
						is_claimed_by = event_target:return_to
					}
					is_claim_or_core_of_ROOT = no
					OR = {
						any_neighbor_state = { is_owned_by = event_target:return_to }
						is_coastal = yes
					}
					NOT = { has_state_flag = KR_keeping_state@ROOT }
				}
				set_state_flag = KR_keeping_state@ROOT
			}
		}
	}
}

# Cores/claims have been returned by an ally
country_event = {
	id = kr.political.76
	immediate = { log = "[GetDateText]: [Root.GetName]: event kr.political.76" }
	title = kr.political.76.t
	desc = kr.political.76.d
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	option = {
		name = kr.political.76.a
		add_opinion_modifier = {
			target = FROM
			modifier = KR_returned_land
		}
		FROM = {
			every_owned_state = {
				limit = {
					is_controlled_by = FROM
					OR = {
						any_neighbor_state = { is_owned_by = ROOT }
						is_coastal = yes
					}
					is_claim_or_core_of_ROOT = yes
					if = {
						limit = {
							FROM = { tag = JAP }
							is_china_claim_of_JAP = yes
						}
						NOT = { has_variable = ambition_area_@JAP }
					}
					OR = {
						NOT = { has_variable = ambition_area_@FROM }
						AND = {
							FROM = { tag = CAN }
							is_british_colonial_claim = yes
						}
						AND = {
							FROM = { tag = ENG }
							is_british_colonial_claim = yes
						}
						AND = {
							FROM = { tag = GBR }
							is_british_colonial_claim = yes
						}
						AND = {
							FROM = { tag = FRA }
							is_french_colonial_claim = yes
						}
						AND = {
							FROM = { tag = JAP }
							ROOT = { tag = TRM }
							OR = {
								state = 408 #Vladivostok
								state = 409 #Khabarovsk
								state = 560 #Nikolayevsk
								state = 562 #Okhotsk
								state = 637 #Kamchatka
							}
						}
						AND = {
							FROM = { tag = JAP }
							OR = {
								region = 194 #Malay Peninsula
								region = 91 #Arafura Sea
								region = 93 #Java Sea
								region = 158 #Sunda Islands
								region = 159 #Borneo
								region = 167 #New Guinea
								region = 192 #Sumatra
							}
						}
						AND = {
							FROM = { tag = NFA }
							is_french_colonial_claim = yes
						}
						FROM = { is_ai = no }
					}
					NOT = {
						has_state_flag = KR_keeping_state@FROM
						is_core_of = FROM
						is_claimed_by = FROM
					}
				}
				ROOT = {
					transfer_state = PREV
				}
			}
		}
	}
}

# Checking whether a country should be exiled but isn't
country_event = {
	id = kr.political.80

	is_triggered_only = yes
	hidden = yes

	trigger = {
		exists = yes
		has_capitulated = yes
		has_war = yes
		OR = {
			is_in_faction = yes
			is_subject = yes
		}
		OR = {
			is_government_in_exile = no
			AND = {
				is_government_in_exile = yes
				var:host = {
					has_capitulated = yes
				}
			}
		}
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event kr.political.80"
		if = {
			limit = {
				is_subject = yes
				overlord = { has_capitulated = no }
			}
			overlord = {
				ROOT = {
					become_exiled_in = { target = PREV legitimacy = 50 }
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					tag = GER
					tag = GEX
					tag = AUS
					tag = FRA
					tag = ENG
					tag = CAN
					tag = GBR
					tag = NFA
					tag = RUS
					tag = SOV
					tag = JAP
					tag = USA
					tag = CSA
					tag = TEX
					tag = CAL
				}
				is_in_faction = yes
				any_allied_country = {
					is_faction_leader = yes
					has_capitulated = no
				}
			}
			random_country = {
				limit = {
					is_in_faction_with = ROOT
					is_faction_leader = yes
				}
				ROOT = {
					become_exiled_in = { target = PREV legitimacy = 100 }
				}
			}
		}
		else_if = {
			limit = {
				is_in_faction = yes
				any_allied_country = {
					is_faction_leader = yes
					has_capitulated = no
				}
			}
			random_country = {
				limit = {
					is_in_faction_with = ROOT
					is_faction_leader = yes
				}
				ROOT = {
					become_exiled_in = { target = PREV legitimacy = 50 }
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					tag = GER
					tag = GEX
					tag = AUS
					tag = FRA
					tag = ENG
					tag = CAN
					tag = GBR
					tag = NFA
					tag = RUS
					tag = SOV
					tag = JAP
					tag = USA
					tag = CSA
					tag = TEX
					tag = CAL
				}
				is_in_faction = yes
				any_allied_country = {
					is_in_faction_with = ROOT
					same_government_type_as_ROOT = yes
					has_capitulated = no
					is_actual_major = yes
				}
			}
			random_country = {
				limit = {
					is_in_faction_with = ROOT
					same_government_type_as_ROOT = yes
					has_capitulated = no
					is_actual_major = yes
				}
				ROOT = {
					become_exiled_in = { target = PREV legitimacy = 100 }
				}
			}
		}
		else_if = {
			limit = {
				is_in_faction = yes
				any_allied_country = {
					is_in_faction_with = ROOT
					same_government_type_as_ROOT = yes
					has_capitulated = no
					is_actual_major = yes
				}
			}
			random_country = {
				limit = {
					is_in_faction_with = ROOT
					same_government_type_as_ROOT = yes
					has_capitulated = no
					is_actual_major = yes
				}
				ROOT = {
					become_exiled_in = { target = PREV legitimacy = 50 }
				}
			}
		}
	}
}

##################################
### Tag Switch to Puppet Event ###
##################################
#
# current disabled
# if you want to enable it, first uncomment this event (duh)
# then add this after the puppet command in the annexation events you want it to fire in:
# TAG = { save_global_event_target_as = change_tag_target }
# country_event = kr.political.2
# where TAG is the tag that has just been puppeted you will switch to after
#
#country_event = {
#	id = kr.political.2
#	title = kr.political.2.t
#	desc = kr.political.2.d
#	picture = GFX_report_event_generic_diplomacy3
#
#	is_triggered_only = yes
#
#	option = {
#		name = kr.political.2.a #Stay as main tag
#		clear_global_event_target = change_tag_target
#	}
#
#	option = {
#		name = kr.political.2.b #Change to puppet tag
#		event_target:change_tag_target = {
#			change_tag_from = ROOT
#		}
#		clear_global_event_target = change_tag_target
#	}
#}
